/*
* generated by Xtext
*/
grammar Internalactionscript3;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.actionscript.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.actionscript.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.xtext.actionscript.services.actionscript3GrammarAccess;

}

@parser::members {
 
 	private actionscript3GrammarAccess grammarAccess;
 	
    public void setGrammarAccess(actionscript3GrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }

}




// Entry rule entryRuleModel
entryRuleModel :
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group){ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport :
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group){ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType :
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives){ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty :
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPropertyAccess().getAlternatives()); }
(rule__Property__Alternatives){ after(grammarAccess.getPropertyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePublic
entryRulePublic :
{ before(grammarAccess.getPublicRule()); }
	 rulePublic
{ after(grammarAccess.getPublicRule()); } 
	 EOF 
;

// Rule Public
rulePublic 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPublicAccess().getAlternatives()); }
(rule__Public__Alternatives){ after(grammarAccess.getPublicAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrivate
entryRulePrivate :
{ before(grammarAccess.getPrivateRule()); }
	 rulePrivate
{ after(grammarAccess.getPrivateRule()); } 
	 EOF 
;

// Rule Private
rulePrivate 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPrivateAccess().getAlternatives()); }
(rule__Private__Alternatives){ after(grammarAccess.getPrivateAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClass
entryRuleClass :
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getClassAccess().getGroup()); }
(rule__Class__Group){ after(grammarAccess.getClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction
entryRuleFunction :
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group){ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariables
entryRuleVariables :
{ before(grammarAccess.getVariablesRule()); }
	 ruleVariables
{ after(grammarAccess.getVariablesRule()); } 
	 EOF 
;

// Rule Variables
ruleVariables 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getVariablesAccess().getAlternatives()); }
(rule__Variables__Alternatives){ after(grammarAccess.getVariablesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUNIT
entryRuleUNIT :
{ before(grammarAccess.getUNITRule()); }
	 ruleUNIT
{ after(grammarAccess.getUNITRule()); } 
	 EOF 
;

// Rule UNIT
ruleUNIT 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getUNITAccess().getGroup()); }
(rule__UNIT__Group){ after(grammarAccess.getUNITAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRule_String
entryRule_String :
{ before(grammarAccess.get_StringRule()); }
	 rule_String
{ after(grammarAccess.get_StringRule()); } 
	 EOF 
;

// Rule _String
rule_String 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.get_StringAccess().getGroup()); }
(rule___String__Group){ after(grammarAccess.get_StringAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRule_int
entryRule_int :
{ before(grammarAccess.get_intRule()); }
	 rule_int
{ after(grammarAccess.get_intRule()); } 
	 EOF 
;

// Rule _int
rule_int 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.get_intAccess().getGroup()); }
(rule___int__Group){ after(grammarAccess.get_intAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulenumber
entryRulenumber :
{ before(grammarAccess.getNumberRule()); }
	 rulenumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule number
rulenumber 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getNumberAccess().getGroup()); }
(rule__Number__Group){ after(grammarAccess.getNumberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPublicParserRuleCall_0()); }
	rulePublic{ after(grammarAccess.getTypeAccess().getPublicParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getPrivateParserRuleCall_1()); }
	rulePrivate{ after(grammarAccess.getTypeAccess().getPrivateParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getVariablesParserRuleCall_0()); }
	ruleVariables{ after(grammarAccess.getPropertyAccess().getVariablesParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getFunctionParserRuleCall_1()); }
	ruleFunction{ after(grammarAccess.getPropertyAccess().getFunctionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Public__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPublicAccess().getGroup_0()); }
(rule__Public__Group_0){ after(grammarAccess.getPublicAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPublicAccess().getGroup_1()); }
(rule__Public__Group_1){ after(grammarAccess.getPublicAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getPublicAccess().getGroup_2()); }
(rule__Public__Group_2){ after(grammarAccess.getPublicAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Private__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrivateAccess().getGroup_0()); }
(rule__Private__Group_0){ after(grammarAccess.getPrivateAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPrivateAccess().getGroup_1()); }
(rule__Private__Group_1){ after(grammarAccess.getPrivateAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getPrivateAccess().getGroup_2()); }
(rule__Private__Group_2){ after(grammarAccess.getPrivateAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesAccess().getGroup_0()); }
(rule__Variables__Group_0){ after(grammarAccess.getVariablesAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getVariablesAccess().getGroup_1()); }
(rule__Variables__Group_1){ after(grammarAccess.getVariablesAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getVariablesAccess().getGroup_2()); }
(rule__Variables__Group_2){ after(grammarAccess.getVariablesAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getVariablesAccess().getGroup_3()); }
(rule__Variables__Group_3){ after(grammarAccess.getVariablesAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsAssignment_0()); }
(	
(
{ before(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_0()); }
)
 
)*{ after(grammarAccess.getModelAccess().getImportsAssignment_0()); }
)
(
{ before(grammarAccess.getModelAccess().getElementsAssignment_1()); }
(	
(
{ before(grammarAccess.getModelAccess().getElementsTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getModelAccess().getElementsTypeParserRuleCall_1_0()); }
)
 
)*{ after(grammarAccess.getModelAccess().getElementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 
{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(	
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)
 
){ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)
(
{ before(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }

	';' 
{ after(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Public__Group_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPublicAccess().getPublicKeyword_0_0()); }

	'public' 
{ after(grammarAccess.getPublicAccess().getPublicKeyword_0_0()); }
)
(
{ before(grammarAccess.getPublicAccess().getClassParserRuleCall_0_1()); }
	ruleClass{ after(grammarAccess.getPublicAccess().getClassParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Public__Group_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPublicAccess().getPublicKeyword_1_0()); }

	'public' 
{ after(grammarAccess.getPublicAccess().getPublicKeyword_1_0()); }
)
(
{ before(grammarAccess.getPublicAccess().getFunctionParserRuleCall_1_1()); }
	ruleFunction{ after(grammarAccess.getPublicAccess().getFunctionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Public__Group_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPublicAccess().getPublicKeyword_2_0()); }

	'public' 
{ after(grammarAccess.getPublicAccess().getPublicKeyword_2_0()); }
)
(
{ before(grammarAccess.getPublicAccess().getVariablesParserRuleCall_2_1()); }
	ruleVariables{ after(grammarAccess.getPublicAccess().getVariablesParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Private__Group_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrivateAccess().getPrivateKeyword_0_0()); }

	'private' 
{ after(grammarAccess.getPrivateAccess().getPrivateKeyword_0_0()); }
)
(
{ before(grammarAccess.getPrivateAccess().getClassParserRuleCall_0_1()); }
	ruleClass{ after(grammarAccess.getPrivateAccess().getClassParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Private__Group_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrivateAccess().getPrivateKeyword_1_0()); }

	'private' 
{ after(grammarAccess.getPrivateAccess().getPrivateKeyword_1_0()); }
)
(
{ before(grammarAccess.getPrivateAccess().getFunctionParserRuleCall_1_1()); }
	ruleFunction{ after(grammarAccess.getPrivateAccess().getFunctionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Private__Group_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrivateAccess().getPrivateKeyword_2_0()); }

	'private' 
{ after(grammarAccess.getPrivateAccess().getPrivateKeyword_2_0()); }
)
(
{ before(grammarAccess.getPrivateAccess().getVariablesParserRuleCall_2_1()); }
	ruleVariables{ after(grammarAccess.getPrivateAccess().getVariablesParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getClassKeyword_0()); }

	'class' 
{ after(grammarAccess.getClassAccess().getClassKeyword_0()); }
)
(
{ before(grammarAccess.getClassAccess().getNameAssignment_1()); }
(	
(
{ before(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0()); }
)
 
){ after(grammarAccess.getClassAccess().getNameAssignment_1()); }
)
(
{ before(grammarAccess.getClassAccess().getGroup_2()); }
(rule__Class__Group_2)?{ after(grammarAccess.getClassAccess().getGroup_2()); }
)
(
{ before(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 
{ after(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_3()); }
)
(
{ before(grammarAccess.getClassAccess().getPropertiesAssignment_4()); }
(	
(
{ before(grammarAccess.getClassAccess().getPropertiesPropertyParserRuleCall_4_0()); }
	ruleProperty{ after(grammarAccess.getClassAccess().getPropertiesPropertyParserRuleCall_4_0()); }
)
 
)*{ after(grammarAccess.getClassAccess().getPropertiesAssignment_4()); }
)
(
{ before(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_5()); }

	'}' 
{ after(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getExtendsKeyword_2_0()); }

	'extends' 
{ after(grammarAccess.getClassAccess().getExtendsKeyword_2_0()); }
)
(
{ before(grammarAccess.getClassAccess().getSuperClassAssignment_2_1()); }
(	
(
{ before(grammarAccess.getClassAccess().getSuperClassClassCrossReference_2_1_0()); }
(
{ before(grammarAccess.getClassAccess().getSuperClassClassIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getSuperClassClassIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getClassAccess().getSuperClassClassCrossReference_2_1_0()); }
)
 
){ after(grammarAccess.getClassAccess().getSuperClassAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }

	'function' 
{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
)
(
{ before(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
(	
(
{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
)
 
){ after(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
)
(
{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }

	'(' 
{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
)
(
{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3()); }

	')' 
{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3()); }
)
(
{ before(grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 
{ after(grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_4()); }
)
(
{ before(grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_5()); }

	'}' 
{ after(grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__Group_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesAccess().getVarKeyword_0_0()); }

	'var' 
{ after(grammarAccess.getVariablesAccess().getVarKeyword_0_0()); }
)
(
{ before(grammarAccess.getVariablesAccess().getUNITParserRuleCall_0_1()); }
	ruleUNIT{ after(grammarAccess.getVariablesAccess().getUNITParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__Group_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesAccess().getVarKeyword_1_0()); }

	'var' 
{ after(grammarAccess.getVariablesAccess().getVarKeyword_1_0()); }
)
(
{ before(grammarAccess.getVariablesAccess().get_StringParserRuleCall_1_1()); }
	rule_String{ after(grammarAccess.getVariablesAccess().get_StringParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__Group_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesAccess().getVarKeyword_2_0()); }

	'var' 
{ after(grammarAccess.getVariablesAccess().getVarKeyword_2_0()); }
)
(
{ before(grammarAccess.getVariablesAccess().get_intParserRuleCall_2_1()); }
	rule_int{ after(grammarAccess.getVariablesAccess().get_intParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__Group_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesAccess().getVarKeyword_3_0()); }

	'var' 
{ after(grammarAccess.getVariablesAccess().getVarKeyword_3_0()); }
)
(
{ before(grammarAccess.getVariablesAccess().getNumberParserRuleCall_3_1()); }
	rulenumber{ after(grammarAccess.getVariablesAccess().getNumberParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UNIT__Group
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUNITAccess().getNameAssignment_0()); }
(	
(
{ before(grammarAccess.getUNITAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getUNITAccess().getNameIDTerminalRuleCall_0_0()); }
)
 
){ after(grammarAccess.getUNITAccess().getNameAssignment_0()); }
)
(
{ before(grammarAccess.getUNITAccess().getColonKeyword_1()); }

	':' 
{ after(grammarAccess.getUNITAccess().getColonKeyword_1()); }
)
(
{ before(grammarAccess.getUNITAccess().getUnitKeyword_2()); }

	'unit' 
{ after(grammarAccess.getUNITAccess().getUnitKeyword_2()); }
)
(
{ before(grammarAccess.getUNITAccess().getGroup_3()); }
(rule__UNIT__Group_3)?{ after(grammarAccess.getUNITAccess().getGroup_3()); }
)
(
{ before(grammarAccess.getUNITAccess().getSemicolonKeyword_4()); }

	';' 
{ after(grammarAccess.getUNITAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UNIT__Group_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUNITAccess().getEqualsSignKeyword_3_0()); }

	'=' 
{ after(grammarAccess.getUNITAccess().getEqualsSignKeyword_3_0()); }
)
(
{ before(grammarAccess.getUNITAccess().getStringAssignment_3_1()); }
(	
(
{ before(grammarAccess.getUNITAccess().getString0x000000Keyword_3_1_0()); }
(
{ before(grammarAccess.getUNITAccess().getString0x000000Keyword_3_1_0()); }

	'0x000000' 
{ after(grammarAccess.getUNITAccess().getString0x000000Keyword_3_1_0()); }
)

{ after(grammarAccess.getUNITAccess().getString0x000000Keyword_3_1_0()); }
)
 
){ after(grammarAccess.getUNITAccess().getStringAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule___String__Group
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.get_StringAccess().getNameAssignment_0()); }
(	
(
{ before(grammarAccess.get_StringAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.get_StringAccess().getNameIDTerminalRuleCall_0_0()); }
)
 
){ after(grammarAccess.get_StringAccess().getNameAssignment_0()); }
)
(
{ before(grammarAccess.get_StringAccess().getColonKeyword_1()); }

	':' 
{ after(grammarAccess.get_StringAccess().getColonKeyword_1()); }
)
(
{ before(grammarAccess.get_StringAccess().getStringKeyword_2()); }

	'String' 
{ after(grammarAccess.get_StringAccess().getStringKeyword_2()); }
)
(
{ before(grammarAccess.get_StringAccess().getGroup_3()); }
(rule___String__Group_3)?{ after(grammarAccess.get_StringAccess().getGroup_3()); }
)
(
{ before(grammarAccess.get_StringAccess().getSemicolonKeyword_4()); }

	';' 
{ after(grammarAccess.get_StringAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule___String__Group_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.get_StringAccess().getEqualsSignKeyword_3_0()); }

	'=' 
{ after(grammarAccess.get_StringAccess().getEqualsSignKeyword_3_0()); }
)
(
{ before(grammarAccess.get_StringAccess().getStringAssignment_3_1()); }
(	
(
{ before(grammarAccess.get_StringAccess().getStringKeyword_3_1_0()); }
(
{ before(grammarAccess.get_StringAccess().getStringKeyword_3_1_0()); }

	'' 
{ after(grammarAccess.get_StringAccess().getStringKeyword_3_1_0()); }
)

{ after(grammarAccess.get_StringAccess().getStringKeyword_3_1_0()); }
)
 
)?{ after(grammarAccess.get_StringAccess().getStringAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule___int__Group
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.get_intAccess().getNameAssignment_0()); }
(	
(
{ before(grammarAccess.get_intAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.get_intAccess().getNameIDTerminalRuleCall_0_0()); }
)
 
){ after(grammarAccess.get_intAccess().getNameAssignment_0()); }
)
(
{ before(grammarAccess.get_intAccess().getColonKeyword_1()); }

	':' 
{ after(grammarAccess.get_intAccess().getColonKeyword_1()); }
)
(
{ before(grammarAccess.get_intAccess().getIntKeyword_2()); }

	'int' 
{ after(grammarAccess.get_intAccess().getIntKeyword_2()); }
)
(
{ before(grammarAccess.get_intAccess().getGroup_3()); }
(rule___int__Group_3)?{ after(grammarAccess.get_intAccess().getGroup_3()); }
)
(
{ before(grammarAccess.get_intAccess().getSemicolonKeyword_4()); }

	';' 
{ after(grammarAccess.get_intAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule___int__Group_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.get_intAccess().getEqualsSignKeyword_3_0()); }

	'=' 
{ after(grammarAccess.get_intAccess().getEqualsSignKeyword_3_0()); }
)
(
{ before(grammarAccess.get_intAccess().getIntAssignment_3_1()); }
(	
(
{ before(grammarAccess.get_intAccess().getInt0Keyword_3_1_0()); }
(
{ before(grammarAccess.get_intAccess().getInt0Keyword_3_1_0()); }

	'0' 
{ after(grammarAccess.get_intAccess().getInt0Keyword_3_1_0()); }
)

{ after(grammarAccess.get_intAccess().getInt0Keyword_3_1_0()); }
)
 
){ after(grammarAccess.get_intAccess().getIntAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getNameAssignment_0()); }
(	
(
{ before(grammarAccess.getNumberAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getNumberAccess().getNameIDTerminalRuleCall_0_0()); }
)
 
){ after(grammarAccess.getNumberAccess().getNameAssignment_0()); }
)
(
{ before(grammarAccess.getNumberAccess().getColonKeyword_1()); }

	':' 
{ after(grammarAccess.getNumberAccess().getColonKeyword_1()); }
)
(
{ before(grammarAccess.getNumberAccess().getNumberKeyword_2()); }

	'Number' 
{ after(grammarAccess.getNumberAccess().getNumberKeyword_2()); }
)
(
{ before(grammarAccess.getNumberAccess().getGroup_3()); }
(rule__Number__Group_3)?{ after(grammarAccess.getNumberAccess().getGroup_3()); }
)
(
{ before(grammarAccess.getNumberAccess().getSemicolonKeyword_4()); }

	';' 
{ after(grammarAccess.getNumberAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getEqualsSignKeyword_3_0()); }

	'=' 
{ after(grammarAccess.getNumberAccess().getEqualsSignKeyword_3_0()); }
)
(
{ before(grammarAccess.getNumberAccess().getDoubleAssignment_3_1()); }
(	
(
{ before(grammarAccess.getNumberAccess().getDouble0Keyword_3_1_0()); }
(
{ before(grammarAccess.getNumberAccess().getDouble0Keyword_3_1_0()); }

	'0' 
{ after(grammarAccess.getNumberAccess().getDouble0Keyword_3_1_0()); }
)

{ after(grammarAccess.getNumberAccess().getDouble0Keyword_3_1_0()); }
)
 
){ after(grammarAccess.getNumberAccess().getDoubleAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


